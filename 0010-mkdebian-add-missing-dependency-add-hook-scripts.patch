From a6f210348f8c3c5d44a7d078eb3b9ce40d0f4685 Mon Sep 17 00:00:00 2001
From: binarycraft007 <elliot.huang.signed@gmail.com>
Date: Sat, 27 Sep 2025 19:42:41 +0800
Subject: [PATCH 10/11] mkdebian: add missing dependency, add hook scripts

---
 scripts/package/mkdebian | 131 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 127 insertions(+), 4 deletions(-)

diff --git a/scripts/package/mkdebian b/scripts/package/mkdebian
index d4b007b38..829ed88f1 100755
--- a/scripts/package/mkdebian
+++ b/scripts/package/mkdebian
@@ -166,10 +166,11 @@ else
 fi
 sourcename=${KDEB_SOURCENAME:-linux-upstream}
 
+flavor=qcom-laptops
 if [ "$ARCH" = "um" ] ; then
 	packagename=user-mode-linux
 else
-	packagename=linux-image
+	packagename=linux-image-${flavor}
 fi
 
 debarch=
@@ -215,13 +216,30 @@ Build-Depends-Arch: bc, bison, flex,
  python3:native, rsync
 Homepage: https://www.kernel.org/
 
-Package: $packagename-${KERNELRELEASE}
+Package: $packagename
 Architecture: $debarch
 Description: Linux kernel, version ${KERNELRELEASE}
  This package contains the Linux kernel, modules and corresponding other
  files, version: ${KERNELRELEASE}.
+Build-Profiles: <!pkg.${sourcename}.nokernel !pkg.${sourcename}.quick>
+Built-Using: ${sourcename} (= ${packageversion})
 EOF
 
+# Add arch-specific dependencies and relations for the main kernel package.
+# These do not apply to User Mode Linux, which has its own simple description.
+if [ "${SRCARCH}" != "um" ]; then
+cat <<EOF >> debian/control
+Pre-Depends: linux-base (>= 4.12~)
+Depends: kmod, \${misc:Depends}, initramfs-tools (>= 0.120+deb8u2) [${debarch}] | linux-initramfs-tool [${debarch}]
+Suggests: firmware-linux-free, debian-kernel-handbook
+Breaks: fwupdate (<< 12-7) [${debarch}], wireless-regdb (<< 2019.06.03-1~) [${debarch}], initramfs-tools (<< 0.120+deb8u2) [${debarch}]
+EOF
+	# Conditionally add Recommends for AppArmor
+	if is_enabled CONFIG_SECURITY_APPARMOR; then
+		echo "Recommends: apparmor [${debarch}]" >> debian/control
+	fi
+fi
+
 if [ "${SRCARCH}" != um ]; then
 cat <<EOF >> debian/control
 
@@ -238,7 +256,7 @@ EOF
 if is_enabled CONFIG_MODULES; then
 cat <<EOF >> debian/control
 
-Package: linux-headers-${KERNELRELEASE}
+Package: linux-headers-${flavor}
 Architecture: $debarch
 Build-Profiles: <!pkg.${sourcename}.nokernelheaders>
 Description: Linux kernel headers for ${KERNELRELEASE} on $debarch
@@ -252,7 +270,7 @@ fi
 if is_enabled CONFIG_DEBUG_INFO; then
 cat <<EOF >> debian/control
 
-Package: linux-image-${KERNELRELEASE}-dbg
+Package: ${packagename}-dbg
 Section: debug
 Architecture: $debarch
 Build-Profiles: <!pkg.${sourcename}.nokerneldbg>
@@ -267,6 +285,111 @@ ARCH := ${ARCH}
 KERNELRELEASE := ${KERNELRELEASE}
 EOF
 
+# Generate package hook scripts if this is not a User Mode Linux build
+if [ "${SRCARCH}" != "um" ]; then
+# preinst
+cat <<EOF > debian/${packagename}.preinst
+#!/bin/sh -e
+
+version=${KERNELRELEASE}
+image_path=/boot/vmlinuz-\$version
+
+if [ "\$1" = abort-upgrade ]; then
+    exit 0
+fi
+
+if [ "\$1" = install ]; then
+    # Create a flag file for postinst
+    mkdir -p /lib/modules/\$version
+    touch /lib/modules/\$version/.fresh-install
+fi
+
+linux-run-hooks image preinst \$version \$image_path -- "\$@"
+
+exit 0
+EOF
+
+# prerm
+cat <<EOF > debian/${packagename}.prerm
+#!/bin/sh -e
+
+version=${KERNELRELEASE}
+image_path=/boot/vmlinuz-\$version
+
+if [ "\$1" != remove ]; then
+    exit 0
+fi
+
+linux-check-removal \$version
+
+linux-run-hooks image prerm \$version \$image_path -- "\$@"
+
+exit 0
+EOF
+
+# postinst
+cat <<EOF > debian/${packagename}.postinst
+#!/bin/sh -e
+
+version=${KERNELRELEASE}
+image_path=/boot/vmlinuz-\$version
+
+if [ "\$1" != configure ]; then
+    exit 0
+fi
+
+depmod \$version
+
+if [ -f /lib/modules/\$version/.fresh-install ]; then
+    change=install
+else
+    change=upgrade
+fi
+linux-update-symlinks \$change \$version \$image_path
+rm -f /lib/modules/\$version/.fresh-install
+
+linux-run-hooks image postinst \$version \$image_path -- "\$@"
+
+exit 0
+EOF
+
+# postrm
+cat <<EOF > debian/${packagename}.postrm
+#!/bin/sh -e
+
+version=${KERNELRELEASE}
+image_path=/boot/vmlinuz-\$version
+
+rm -f /lib/modules/\$version/.fresh-install
+
+if [ "\$1" != upgrade ] && command -v linux-update-symlinks >/dev/null; then
+    linux-update-symlinks remove \$version \$image_path
+fi
+
+if command -v linux-run-hooks >/dev/null; then
+    linux-run-hooks image postrm \$version \$image_path -- "\$@"
+else
+    echo >&2 'W: linux-base is not installed; cannot run postrm hooks'
+fi
+
+if [ "\$1" = purge ]; then
+    for extra_file in modules.dep modules.isapnpmap modules.pcimap \\
+                      modules.usbmap modules.parportmap \\
+                      modules.generic_string modules.ieee1394map \\
+                      modules.ieee1394map modules.pnpbiosmap \\
+                      modules.alias modules.ccwmap modules.inputmap \\
+                      modules.symbols modules.ofmap \\
+                      modules.seriomap modules.\\*.bin \\
+                      modules.softdep modules.weakdep modules.devname; do
+	eval rm -f /lib/modules/\$version/\$extra_file
+    done
+    rmdir /lib/modules/\$version || true
+fi
+
+exit 0
+EOF
+fi
+
 cp "${srctree}/scripts/package/debian/copyright" debian/
 cp "${srctree}/scripts/package/debian/rules" debian/
 
-- 
2.51.0

